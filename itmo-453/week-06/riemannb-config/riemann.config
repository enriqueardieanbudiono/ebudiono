(logging/init {:file "/var/log/riemann/riemann.log"})
; Added the TCP library so riemann can send events over the network
(require 'riemann.client)

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "192.168.33.101"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)
  downstream (batch 100 1/10
    (async-queue! :agg { :queue-size 1e3
                         :core-pool-size 4
                         :max-pool-size 32}
    (forward
        (riemann.client/tcp-client :host "riemannmc"))))]

  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index

      ;#(info %)
      (where (and (service "disk /") (> metric 0.10))
        #(info "Disk space on / is over 10%!" %))

      (where (service #"^riemann.*")
        downstream)
    )
   )
)